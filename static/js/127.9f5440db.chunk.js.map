{"version":3,"file":"static/js/127.9f5440db.chunk.js","mappings":"wNAEaA,EAASC,EAAAA,GAAAA,IAAH,yDAMNC,EAAYD,EAAAA,GAAAA,GAAH,yFAOTE,EAAWF,EAAAA,GAAAA,GAAH,oU,SCVRG,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC9B,OACE,UAACH,EAAD,WACKG,GAAc,SAACN,EAAD,CAAQO,IAAG,UANjB,mCAMiB,OAAkBD,MAAkB,SAACN,EAAD,CAAQO,IAAI,8EAC5E,SAACL,EAAD,UAAYG,QAUpB,K,sGCsBA,UAlCiB,SAAAG,GACf,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAC,GACtBN,EAAWM,EAAUC,cAEtB,KAGD,iCACE,qDAGCR,EAAQS,OAAS,IAChB,SAAC,KAAD,UACGT,EAAQU,KAAI,SAAAC,GACX,OACE,SAAC,KAAD,CAEEC,GAAI,UAAYD,EAAKE,GACrBC,MAAO,CAAEC,KAAMb,GAHjB,UAKE,SAAC,IAAD,CAAUN,YAAae,EAAKf,YAAaD,MAAOgB,EAAKhB,SAJhDgB,EAAKE,c,oICzBpBG,EAAU,gCACVC,EAAM,mCAECZ,EAAgB,mCAAG,+FACtBa,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,EACTI,KAAM,IAHkB,SAMLC,MAAM,GAAD,OAAIN,EAAJ,8BAAiCE,IANjC,cAMtBK,EANsB,gBAOJA,EAASC,OAPL,cAOtBjB,EAPsB,yBAQrBA,GARqB,2CAAH,qDAWhBkB,EAAc,mCAAG,WAAOC,EAAaC,GAApB,kFACrBD,EADqB,wDAEpBE,EAFoB,UAEZ,IAAIT,gBAAgBQ,GAAQE,IAAI,gBAFpB,QAEgC,GACpDX,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,EACTI,KAAM,EACNO,MAAAA,EACAE,eAAe,IAPO,SASVR,MAAM,GAAD,OAAIN,EAAJ,wBAA2BE,IATtB,cASpBa,EAToB,gBAUVA,EAAEP,OAVQ,cAUpBQ,EAVoB,yBAWnBA,GAXmB,4CAAH,wDAcdC,EAAa,mCAAG,WAAOpB,GAAP,kFACnBK,EAAO,IAAIC,gBAAgB,CAC7BC,QAASH,IAFY,SAITK,MAAM,GAAD,OAAIN,EAAJ,iBAAoBH,EAApB,YAA0BK,EAA1B,wCAJI,cAInBa,EAJmB,gBAKTA,EAAEP,OALO,cAKnBQ,EALmB,yBAMlBA,GANkB,2CAAH","sources":["components/FilmCard/FilmCard.styled.jsx","components/FilmCard/FilmCard.jsx","components/HomeView/HomeView.jsx","views/fetchAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Poster = styled.img` \n  height: 85%;\n  width: 100%;\n`\nexport default Poster\n\nexport const FilmTitle = styled.h2` \ncolor: #333;\nheight: 30px;\nfont-size:20px;\npadding: 10px;  \n`\n\nexport const CardFilm = styled.li` \n display: flex;\n flex-direction: column;\n  height: 100%;\nwidth: 100%;\nborder-radius: 5px;\noverflow: hidden;\nbackground-color:#bdb9a6;\n  box-shadow: -2px -2px 7px rgb(109, 109, 109);\ntransition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);\n:hover {\n    transform: scale(1.03);\n  }\n`\n","import { Poster, FilmTitle, CardFilm } from './FilmCard.styled'\nimport PropTypes from 'prop-types'\nconst imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n\n\nexport const FilmCard = ({ title, poster_path }) => {\n    return (\n      <CardFilm>\n          {poster_path ? <Poster src={`${imgBaseUrl}${poster_path}`} />:<Poster src='https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg' /> }\n        <FilmTitle>{title}</FilmTitle>\n      </CardFilm>\n  )\n}\n\nFilmCard.propTypes = {\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n}\n  \nexport default FilmCard\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { findPopularFilms } from 'views/fetchAPI';\nimport {BoxFilms} from '../Navigation/Navigation.style'\n\nimport { FilmCard } from '../FilmCard/FilmCard.jsx';\n\nconst HomeView = props => {\n  const [popular, setPopular] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    findPopularFilms().then(returnAPI => {\n      setPopular(returnAPI.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <h2>Popular films of the day</h2>\n\n      {/* {console.log(popular)} */}\n      {popular.length > 0 && (\n        <BoxFilms>\n          {popular.map(film => {\n            return (\n              <NavLink\n                key={film.id}\n                to={'movies/' + film.id}\n                state={{ from: location }}\n              >\n                <FilmCard poster_path={film.poster_path} title={film.title} />\n              </NavLink>\n            );\n          })}\n        </BoxFilms>\n      )}\n    </>\n  );\n};\n\nexport default HomeView;\n","// https://api.themoviedb.org/3/movie/550?api_key=8b3a5753880e240f0b2ef7fb5ea89df3\n\nconst baseUrl = \"https://api.themoviedb.org/3/\";\nconst KEY = 'c4ff5df06d9c3bc212d0ff99e5222626';\n\nexport const findPopularFilms = async () => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n    });\n\n    const fetchAPI = await fetch(`${baseUrl}trending/movie/day?${meta}`)\n    const returnAPI = await fetchAPI.json()\n    return returnAPI;\n}\n\nexport const findFilmsTitle = async (searchQuery, search) => {\n    if (!searchQuery) return;\n    const query = new URLSearchParams(search).get('query') ?? ''; \n    const meta = new URLSearchParams({\n        api_key: KEY,\n        page: 1,\n        query, \n        include_adult: false,\n    });\n    const f = await fetch(`${baseUrl}search/movie?${meta}`)\n    const r = await f.json()\n    return r\n}\n\nexport const findFilmsInfo = async (id) => {\n    const meta = new URLSearchParams({\n        api_key: KEY,\n    });\n    const f = await fetch(`${baseUrl}movie/${id}?${meta}&append_to_response=credits,reviews`)\n    const r = await f.json()\n    return r\n}"],"names":["Poster","styled","FilmTitle","CardFilm","FilmCard","title","poster_path","src","props","useState","popular","setPopular","location","useLocation","useEffect","findPopularFilms","then","returnAPI","results","length","map","film","to","id","state","from","baseUrl","KEY","meta","URLSearchParams","api_key","page","fetch","fetchAPI","json","findFilmsTitle","searchQuery","search","query","get","include_adult","f","r","findFilmsInfo"],"sourceRoot":""}